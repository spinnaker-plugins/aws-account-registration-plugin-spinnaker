buildscript {
  ext.kotlin_version = '1.3.50'

  repositories {
    mavenCentral()
  }
  dependencies {
//    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}
apply plugin: "io.spinnaker.plugin.service-extension"
//apply plugin: "maven-publish"
apply plugin: 'groovy'
apply plugin: 'java'
//apply plugin: 'kotlin-kapt'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
  jcenter()
  maven { url "http://dl.bintray.com/spinnaker/spinnaker/" }
}

sourceSets.main.java.srcDirs = []
sourceSets.main.groovy.srcDirs += ["src/main/java"]

spinnakerPlugin {
  serviceName = "clouddriver"
  pluginClass = "com.amazon.aws.spinnaker.plugin.registration.AccountRegistrationPlugin"
  requires = "clouddriver>=5.0.0"
}


dependencies {
//  compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//  api "org.codehaus.groovy:groovy"
  compileOnly "org.codehaus.groovy:groovy-all:+"
  compileOnly (group: 'org.springframework', name: 'spring-context', version: '5.2.4.RELEASE')
  compileOnly (group: 'com.netflix.spinnaker.kork', name: 'kork-plugins-spring-api', version: "${korkVersion}")
  compileOnly (group: 'org.springframework', name: 'spring-web', version: '5.2.4.RELEASE')
  compileOnly (group: 'com.netflix.spinnaker.orca', name: 'orca-core', version: "${orcaVersion}")
  compileOnly 'com.netflix.spinnaker.clouddriver:clouddriver-api:5.67.0'
  compileOnly 'com.netflix.spinnaker.clouddriver:clouddriver-aws:5.67.0'
  compileOnly 'com.netflix.spinnaker.clouddriver:clouddriver-ecs:5.67.0'
  compileOnly 'com.netflix.spinnaker.clouddriver:cats-core:5.67.0'
  compileOnly 'com.netflix.spinnaker.clouddriver:clouddriver-security:5.67.0'
  compileOnly 'com.netflix.spinnaker.clouddriver:clouddriver-eureka:5.67.0'
  compileOnly 'com.netflix.spinnaker.clouddriver:clouddriver-core:5.67.0'
  compileOnly 'com.netflix.spinnaker.fiat:fiat-core:1.22.0'
  compileOnly 'com.amazonaws:aws-java-sdk:1.11.802'
  compileOnly 'org.projectlombok:lombok:+'
  annotationProcessor "org.projectlombok:lombok:+"
  annotationProcessor("org.pf4j:pf4j:$pf4jVersion")

  testImplementation (group: 'com.netflix.spinnaker.orca', name: 'orca-core', version: "${orcaVersion}")
  testImplementation 'com.netflix.spinnaker.clouddriver:clouddriver-api:5.67.0'
  testImplementation 'com.netflix.spinnaker.clouddriver:clouddriver-aws:5.67.0'
  testImplementation 'com.netflix.spinnaker.clouddriver:clouddriver-ecs:5.67.0'
  testImplementation 'com.netflix.spinnaker.clouddriver:cats-core:5.67.0'
  testImplementation 'com.netflix.spinnaker.clouddriver:clouddriver-security:5.67.0'
  testImplementation 'com.netflix.spinnaker.clouddriver:clouddriver-eureka:5.67.0'
  testImplementation 'com.netflix.spinnaker.clouddriver:clouddriver-core:5.67.0'
  testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.2"
  testImplementation group: 'io.strikt', name: 'strikt-core', version: '0.22.1'
  testImplementation group: 'dev.minutest', name: 'minutest', version: '1.10.0'
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.2.5.RELEASE'
  testImplementation (group: 'org.springframework', name: 'spring-web', version: '5.2.4.RELEASE')
//  testImplementation (group: 'org.springframework', name: 'spring-context', version: '5.2.4.RELEASE')
  testRuntime "org.junit.jupiter:junit-jupiter-engine:5.3.2"
  testRuntime "org.junit.platform:junit-platform-launcher:1.3.2"
}

test {
  testLogging {
    events "passed", "skipped", "failed", "standardOut", "standardError"
  }
  useJUnitPlatform()
}