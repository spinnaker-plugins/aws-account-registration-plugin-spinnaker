apply plugin: "io.spinnaker.plugin.service-extension"
apply plugin: 'java'
apply plugin: "groovy"

java {
  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17
}

sourceSets.main.java.srcDirs = ["src/main/java"]

spinnakerPlugin {
  serviceName = "clouddriver"
  pluginClass = "com.amazon.aws.spinnaker.plugin.registration.AccountRegistrationPlugin"
  requires = "clouddriver>=7.1.0"
}

repositories {
  mavenLocal()
  mavenCentral()
  jcenter() { allowInsecureProtocol = true }
}

dependencies {
  implementation(enforcedPlatform("io.spinnaker.clouddriver:clouddriver-bom:${clouddriverVersion}"))
  implementation "com.google.guava:guava"
  compileOnly "org.apache.groovy:groovy:4.0.15"
  compileOnly (group: 'org.springframework', name: 'spring-context')
  compileOnly (group: 'io.spinnaker.kork', name: 'kork-plugins-spring-api')
  compileOnly (group: 'org.springframework', name: 'spring-web')
  compileOnly "io.spinnaker.clouddriver:clouddriver-api"
  compileOnly "io.spinnaker.clouddriver:clouddriver-aws"
  compileOnly "io.spinnaker.clouddriver:clouddriver-ecs"
  compileOnly "io.spinnaker.clouddriver:clouddriver-lambda"
  compileOnly "io.spinnaker.clouddriver:cats-core"
  compileOnly "io.spinnaker.clouddriver:clouddriver-security"
  compileOnly "io.spinnaker.clouddriver:clouddriver-eureka"
  compileOnly "io.spinnaker.clouddriver:clouddriver-core"
  compileOnly "io.spinnaker.fiat:fiat-core"
  compileOnly 'com.amazonaws:aws-java-sdk'
  compileOnly 'org.projectlombok:lombok'
  compileOnly 'com.amazonaws:aws-java-sdk-core'
  compileOnly "org.apache.groovy:groovy:4.0.15"

  annotationProcessor(platform("io.spinnaker.clouddriver:clouddriver-bom:${clouddriverVersion}"))
  annotationProcessor "org.projectlombok:lombok"
  annotationProcessor("org.pf4j:pf4j")

  testImplementation "io.spinnaker.clouddriver:clouddriver-api"
  testImplementation "io.spinnaker.clouddriver:clouddriver-aws"
  testImplementation "io.spinnaker.clouddriver:clouddriver-ecs"
  testImplementation "io.spinnaker.clouddriver:cats-core"
  testImplementation "io.spinnaker.clouddriver:clouddriver-security"
  testImplementation "io.spinnaker.clouddriver:clouddriver-eureka"
  testImplementation "io.spinnaker.clouddriver:clouddriver-core"
  testImplementation "io.spinnaker.fiat:fiat-core"
  testImplementation group: 'io.strikt', name: 'strikt-core'
  testImplementation group: 'dev.minutest', name: 'minutest'
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
  testImplementation group: 'org.springframework', name: 'spring-web'
  testImplementation 'com.amazonaws:aws-java-sdk-core'
  testImplementation "org.apache.groovy:groovy:4.0.15"
  testImplementation "org.spockframework:spock-core:2.3-groovy-4.0"
}

// Add resolution strategy to fix Groovy conflict
configurations.all {
  resolutionStrategy {
    force 'org.apache.groovy:groovy:4.0.15'
    force 'org.apache.groovy:groovy-json:4.0.15'
    force 'org.apache.groovy:groovy-templates:4.0.15'
    
    // Exclude conflicting Groovy modules
    exclude group: 'org.codehaus.groovy', module: 'groovy'
    exclude group: 'org.codehaus.groovy', module: 'groovy-all'
  }
}

test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed", "standardOut", "standardError"
  }
  
  // Retain Java 17 module system compatibility flags for tests
  jvmArgs = [
    '--add-opens=java.base/java.lang=ALL-UNNAMED',
    '--add-opens=java.base/java.util=ALL-UNNAMED',
    '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED',
    '--add-opens=java.base/java.text=ALL-UNNAMED',
    '--add-opens=java.desktop/java.awt.font=ALL-UNNAMED'
  ]
}
