name: Release

on:
  push:
    tags:
    - 'v*'

jobs:
  build:
    name: Release Plugin
    runs-on: ubuntu-latest
    steps:
      - name: download jq
        run: sudo apt-get install jq

      - name: checkout code
        uses: actions/checkout@v2

      - name: run tests
        run: ./gradlew test

      - name: build
        run: ./gradlew releaseBundle

      - name: get project info
        id: get_project_info
        run: |
          echo ::set-output name=PROJECT::$(basename `pwd`)
          echo ::set-output name=PROJECT_KEBAB::$(basename `pwd` | sed 's/\([a-z0-9]\)\([A-Z]\)/\1_\L\2/g')
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=REPO::${GITHUB_REPOSITORY}
          
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: upload release asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./build/distributions/${{ steps.get_project_info.outputs.PROJECT }}-${{ steps.get_project_info.outputs.VERSION }}.zip
          asset_name: ${{ steps.get_project_info.outputs.PROJECT }}-${{ steps.get_project_info.outputs.VERSION }}.zip
          asset_content_type: application/zip 

      - name: mutate plugin-info.json
        id: mutate-package-info
        env:
          ARTIFACT_URL: https://github.com/${{ steps.get_project_info.outputs.REPO }}/releases/download/${{ steps.get_project_info.outputs.VERSION }}/${{ steps.get_project_info.outputs.PROJECT }}-${{ steps.get_project_info.outputs.VERSION }}.zip
        run: cat ./build/distributions/plugin-info.json | jq '.releases |= map(if .version == "v0.0.1" then . + '{\"url\":\"$ARTIFACT_URL\"}' else . end)' > ./plugins.json

      - name: commit plugins.json
        id: commit-plugins 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name 'Release Bot'
          git config user.email 'release-bot@users.noreply.github.com'
          git add plugins.json
          git commit -m "updating release repository"
      - name: create pull request
        id: create-pull-request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: '[Example] Update Release Repository - ${{ steps.get_project_info.outputs.VERSION }}'
          base: 'feature/github-actions'
          team-reviewers: |
            owners
